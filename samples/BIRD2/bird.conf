# Basic BIRD2 configuration file for BIRD 2

router id 192.168.1.1;
log    syslog all;
debug  protocols all;

# Community list definition
define LOCAL_PREF_HIGH = [(65001,100), (65001,200)];
define AS_PATH_FILTER = [= 65001 65002 * =];
define MY_ASN = 65001;
define TEST_STR = "test";
define PREFIX_LIST = [
  10.0.0.0/8+,
  172.16.0.0/12+,
  192.168.0.0/16+,
  2001::/32{33,128}
];

# Define a protocol
protocol static static_routes {
  ipv4 {
    table  master4;
    export all;
    import none;
  }

  route 10.0.0.0/8 via 192.168.1.254;
  route 172.16.0.0/12 blackhole;
}

# BGP protocol with AS path filtering
protocol bgp peer1 {
  local    as 65001;
  neighbor 192.168.1.2 as 65002;

  ipv4 {
    export filter {
      if     bgp_path ~ [= * 65003 * =] then reject;
      accept;
    }

    import all;
  }
}

# OSPF protocol
protocol ospf v2 ospf1 {
  ipv4 {
    export all;
  }

  area 0 {
    interface "eth0" {
      hello 10;
    }
  }
}

protocol bgp Upstream {
  local    as 65001;
  neighbor 203.0.113.1 as 174;

  ipv4 {
    import filter {
      if     bgp_path ~ AS_PATH_FILTER then reject;
      accept;
    }

    export filter export_filter;
  }
}

protocol kernel Kernel {
  ipv4;
  scan time 10;
}

# Filter and function definitions
function is_private_network() -> bool {
  if     net ~ [ 10.0.0.0/8+, 172.16.0.0/12+, 192.168.0.0/16+ ] then return true;
  return false;
}

filter export_filter {
  if is_private_network() then reject;
  if bgp_path.len > 10 then reject;

  if bgp_community ~ [(65001,100)] then {
    bgp_local_pref = 200;
    accept;
  }

  accept;
}

protocol bgp uplink {
  local    as 65001;
  neighbor 203.0.113.1 as 174;

  ipv4 {
    import filter {
      if     bgp_path ~ AS_PATH_FILTER then reject;
      accept;
    }

    export filter export_filter;
  }
}