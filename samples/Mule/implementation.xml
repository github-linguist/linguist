<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="b1858593-4f0c-4e06-8a81-bf5818e9c852" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="72758660-9d8e-4a5d-97dc-8daf8972525d" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="e433e034-996e-4e2d-8ac1-2fc63d529b5d" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="e2216771-1795-457e-90a5-b5905ff6fbeb" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="587664b4-2b66-428c-8b19-2e3bb955692e" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="ef2e05ed-205f-4bc9-aad4-73687e4bbc15" name="getAmericanFlights" />
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="7e7f573f-e39d-44cc-9cec-5ed684d6ee18" name="getUnitedFlights" />
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="55a821b1-4747-44c1-a257-b1a427ef1439" name="getDeltaFlights" />
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="5c62b7a7-bb4a-4890-8f8c-a9ee822c5de6" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="1c4e5f4c-458c-41fd-b7da-64340b2375ea" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ac96cc58-6bb6-4a99-ae16-09c2ffc61de8" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="445847ad-0e07-4019-88f6-806a6fd6dd91" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="2e7480a5-edbe-4d6f-8bd9-451ea368b18a">
			<route>
				<try doc:name="Try" doc:id="68d773dd-da48-4285-a8d3-fe65b142cdaa" >
					<flow-ref doc:name="getAmericanFlights" doc:id="16313b86-63a0-47b7-b040-8d96bae8143b" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="95f4d0e0-b98d-4d0c-b258-adaddfe2fee8" type="ANY">
							<ee:transform doc:name="[]" doc:id="b3cfe1bb-faf1-489e-ad52-2ff66f02ad4c" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route>
				<try doc:name="Try" doc:id="929ce273-b021-48a6-bada-04b60a1fd757" >
					<flow-ref doc:name="getUnitedFlights" doc:id="c13f0b3f-4c5a-443b-b2d5-d0e8d704bc69" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="429be0fc-4782-43b0-8bd9-812bdb9aa55c" type="ANY">
							<ee:transform doc:name="[]" doc:id="910e3fb6-7715-4eb9-8217-baaa5a732a6a" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route>
				<try doc:name="Try" doc:id="7b011a2c-e44d-488b-b945-1ee0cf7127ce" >
					<flow-ref doc:name="getDeltaFlights" doc:id="37b6cae1-1e05-4214-89bc-0dca69948460" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="63c9dc56-5e19-482f-817c-26ff2428ede9" type="ANY">
							<ee:transform doc:name="[]" doc:id="58c4e315-968b-447d-a208-b8ccf3cf8266" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="cdd79549-173b-4f1f-aac5-8c333d5cd731" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="06cfe2b1-d039-4a74-b083-4b56ae445f08" />
	</flow>
	<sub-flow name="setCode" doc:id="528ed54d-7b7f-482c-b76f-70bd01eff06a" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="d2491cd5-31f3-4006-a9f4-97ec1bd5f718" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="71886713-c8b8-4fc0-bdbf-3caed50bb9e8" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="44f959ae-2b0f-46eb-af0b-0d69abc2cf9a" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="45820e39-eaf3-474e-bc13-a91acee01362" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cfe846da-c63b-4927-842b-8e720bfb829e" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="147b577d-911b-4b1d-8f35-f8713d81c013" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="d379c5f5-1159-492a-878d-f190ff91df38">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="fd1c71c8-d937-46f7-accb-24aee1b307b6" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="b51d483c-072e-41e9-9ba7-31ea43eaed2b" >
		<http:request method="GET" doc:name="Get flights" doc:id="556e9e2a-f03a-4eb8-ab64-e0fdf0718da0" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="2072728d-be2e-4a1d-8b6f-60962beef868">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="96f93b1d-63f5-4172-8819-8a676ce5495f" />
	</flow>
	<flow name="getDeltaFlights" doc:id="b5c97df1-febd-4c25-ba79-884bb995862b" >
		<ee:transform doc:name="Pass code" doc:id="d1bc636b-02fd-40ca-b818-917571c58906" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="c8b3a055-75c9-4146-8452-a135e39fd263" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="e9ccdff9-6a62-4ed5-aea7-488c8433293f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ab5b9f1c-9252-46da-8820-ca87569e2139" />
	</flow>
	<flow name="postFlight" doc:id="c50624e5-7d40-49f2-a576-603b53d591de" >
		<ee:transform doc:name="Transform Message" doc:id="743b7104-5a34-4922-9f3b-cfb3c8138464" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
	hub: "MUA",
	flight @(airline: payload.airline): {
		code: payload.toAirportCode
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="937ea40b-3c4c-4c35-80b6-6ebb87158268" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="98b3afbc-fdc0-4efd-bf19-6519f0e8b982" >
		<http:listener doc:name="POST /multipleflights" doc:id="c9775985-e458-46d8-8a16-d6f012d70e93" config-ref="HTTP_Listener_config" path="/multipleflights"/>
		<ee:transform doc:name="Transform Message" doc:id="8769285f-5a52-4459-9e36-212e2ebe3406" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw

//var numSeats = 400
//var numSeats = (x=400) -> x
/*
var numSeats = (planeType: String) ->
	if (planeType contains('737'))
		150
	else
		300

*/

fun getNumSeats(planeType: String) =
	if (planeType contains('737'))
		150
	else
		300

type Currency = String {format: "###.00"}
type Flight = Object {class: "com.mulesoft.training.Flight"}
---
using(flights = 
	payload..*return map (object, index) -> {
		destination: object.destination,
		price: object.price as Number as Currency,
		//totalSeats: getNumSeats(object.planeType as String),
		totalSeats: lookup("getTotalSeats", {planeType: object.planeType}),
		planeType: upper(object.planeType as String),
		departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "MMM dd, yyyy"}
	} as Object
)

flights
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="74c0c310-38a8-4a67-bd1c-81b85ec62781" />
	</flow>
	<flow name="getTotalSeats" doc:id="5b30cb54-b8bd-487b-a649-069223217732" >
		<ee:transform doc:name="Transform Message" doc:id="9383e0ec-100c-49c4-97ba-a7b4ec0229de" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

fun getNumSeats(planeType: String) =
	if (planeType contains('737'))
		150
	else
		300
---
getNumSeats(payload.planeType)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
