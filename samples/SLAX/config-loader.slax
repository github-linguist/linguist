version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
ns ext = "http://xmlsoft.org/XSLT/namespace";
ns date = "http://exslt.org/dates-and-times";
import "/var/db/scripts/import/junos.xsl";

/* Create global connection to local device */
var $connection = jcs:open();

/* Define arguments */
var $arguments = {
 <argument> {
    <name> "source";
    <description> "If true is declared then output will be displayed to the console";
 }
 <argument> {
    <name> "action";
    <description> "Action to be taken with the loaded configuration (replace, merge, override, or set)";
 }
 <argument> {
    <name> "format";
    <description> "Format of the configuration to be loaded (Options: xml or text)";
 }
}

param $source;
param $action;
param $format;

/* function to open config */
template open-config() {
  var $rpc = {
    <open-configuration> {
      <private>;
    }
  }
  expr jcs:execute($connection,$rpc);
}

/* function to load a config from a specific url*/
template load-new-config-url($url,$action,$format){
  var $rpc = {
    <load-configuration url=$url action=$action format=$format>;
  }
  var $results = jcs:execute($connection,$rpc);
  copy-of $results;
}

/* function to commit config */
template commit-config($message) {
  var $rpc = {
    <commit-configuration> {
      <log> $message;
    }
  }
  expr jcs:execute($connection,$rpc);
}

/* function to open config */
template close-config() {
  var $rpc = {
    <close-configuration>;
  }
  expr jcs:execute($connection,$rpc);
}

match / {
    if (($source != "") and ($action != "") and ($format != "")) {
        expr jcs:output("Opening candidate configuration");
        call open-config();
        expr jcs:output("Loading new configuration");
        var $config-results = {
            call load-new-config-url($url = $source,$action = $action,$format = $format);
        }
        /*convert results to xml node-set */
        var $config-results-nodes = ext:node-set($config-results);
        if ($config-results-nodes//xnm:error) {
            /* error fetching the configuration, closing config */
            expr jcs:output("Error fetching config");
            expr jcs:output($config-results-nodes//xnm:error//message);
            call close-config();
        } else {
            /* configuration successfully loaded, committing */
            expr jcs:output("Commiting candidate configuration");
            call commit-config($message = "Loaded new configuration from url " _ $source);
        }
    } else {
        expr jcs:output("Arguments not correctly specified");
        if ($source == "") {
            expr jcs:output("Please specify the source of the configuration");
        }
        if ($action == "") {
            expr jcs:output("Please specify the required action");
        }
        if ($format == "") {
            expr jcs:output("Please specify the file format");
        }
    }
    
    <op-script-results> {
    }
}