@startuml zcl_ioc_container
' from https://github.com/bothzoli/ABAP-IoC-Container/blob/master/article/img/uml.pu

hide empty members

class ZCL_IOC_CONTAINER << (C,#FF5050) Singleton >> {
	{static} + GET_INSTANCE()
	+ REGISTER()
	+ DEREGISTER()
	+ REGISTER_INSTANCE()
	+ DEREGISTER_INSTANCE()
	+ RESOLVE()
	- CONSTRUCTOR()
}

class ZCX_IOC_CONTAINER

ZCL_IOC_CONTAINER .right.> ZCX_IOC_CONTAINER: <<throws>>

@enduml

@startuml zcl_ioc_container_detailed

hide empty members

class ZCL_IOC_CONTAINER << (C,#FF5050) Singleton >> {
	{static} - CONTAINER
	- MAPPING_TABLE[]
	- INSTANCE_MAPPING_TABLE[]
	{static} + GET_INSTANCE()
	+ REGISTER()
	+ DEREGISTER()
	+ REGISTER_INSTANCE()
	+ DEREGISTER_INSTANCE()
	+ RESOLVE()
	- CONSTRUCTOR()
	- ASSERT_CREATION_POSSIBLE()
	- ASSERT_OBJ_CREATION_POSSIBLE()
	- CHECK_CREATE_PRIVATE()
	- CHECK_NOT_INSTANTIATABLE()
	- GET_PARAMETER_DESCRIPTOR()
	- GET_PARAMETER_TYPE_NAME()
	- GET_REGISTERED_MAPPING()
	- GET_REGISTERED_OBJECT()
	- GET_TYPE_DESCRIPTOR()
}

class ZCX_IOC_CONTAINER {
	{static} - CLASS_IS_CREATE_PRIVATE
	{static} - ERROR_IN_TYPE_DETERMINATION
	{static} - OBJECT_IS_NOT_INSTANTIATABLE
}

ZCL_IOC_CONTAINER .right.> ZCX_IOC_CONTAINER: <<throws>>

@enduml

@startuml test_classes

hide empty members

class ZCL_IOC_CONTAINER << (C,#FF5050) Singleton >>

interface ZIF_IOC_A << Interface >>
interface ZIF_IOC_B << Interface >>

class ZCL_IOC_A {
	+ IOC_B: ZIF_IOC_B
	+ CONSTRUCTOR(IOC_B: ZIF_IOC_B)
}

abstract class ZCL_IOC_ABSTRACT

class ZCL_IOC_CREATE_PRIVATE << (C,#FF5050) >> {
	- CONSTRUCTOR()
}

class ZCL_IOC_CREATE_PRIVATE_FRIEND << (C,#FF5050) >> {
	- CONSTRUCTOR()
}

class ZCL_IOC_B_SUPER

class ZCL_IOC_B_SUBCL {
	+ IOC_C: ZCL_IOC_C
	+ CONSTRUCTOR(IOC_C: ZCL_IOC_C)
}

class ZCL_IOC_C {
	+ STRING: NAME
	+ INT4: AGE
	+ CONSTRUCTOR(STRING: NAME, INT4: AGE?)
}

ZIF_IOC_A <|.. ZCL_IOC_A
ZIF_IOC_A <|.. ZCL_IOC_ABSTRACT
ZIF_IOC_A <|.right. ZCL_IOC_CREATE_PRIVATE
ZCL_IOC_CONTAINER -down- ZCL_IOC_CREATE_PRIVATE_FRIEND : <<friend>>
ZIF_IOC_A <|.left. ZCL_IOC_CREATE_PRIVATE_FRIEND
ZCL_IOC_A o-right- ZIF_IOC_B
ZIF_IOC_B <|.. ZCL_IOC_B_SUPER
ZCL_IOC_B_SUPER <|-- ZCL_IOC_B_SUBCL
ZCL_IOC_B_SUBCL o-right- ZCL_IOC_C

@enduml
