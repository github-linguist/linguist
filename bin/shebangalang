#!/usr/bin/env sh # shebangalang â€” prepend file with #!/usr/bin/env [language].
# 2014, G. Nixon, public domain or license of your choice. No warranty, etc.

# USAGE:
#        shebangalang [ interpretable script missing a shebang ]

# Writes file to stdout or returns non-zero if language cannot be detected.

# Important: if a file already has a shebang, it is left in place. This may
# cause languages which do not treat hash symbols as comments to error.

for last; do :; done # So we can put a newline between files.

# This means we can't find 'language' or 'linguist', or there are no arguements.
[ "$(language "$0")" = "sh" ] || return 1; [ $# = 0 ] && return 0

for each in "$@"; do
  [ x"$(language "$each")" = x"" ] && retval=1 && break
  echo "#!/usr/bin/env $(language "$each") # autogenerated - could be wrong!" ||
  return 1; cat "$each"; [ "$each" = "$last" ] || command printf '\n\n'
done

return $retval
